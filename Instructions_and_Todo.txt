Instruction for launching Sunflower

roslaunch rosaria sf_aria_driver.launch 
roslaunch sf_navigation navigation.launch 
roslaunch sf_controller start_controller.launch 
roslaunch sf_dance sf_dance.launch 
roslaunch sf_head sf_head.launch 
roslaunch sf_tune sf_tune.launch 

# send commands to test the behaviour channel together
rostopic pub -1 /sf_tune/sf_tune_filename std_msgs/String "Happy.xml" | rostopic pub -1 /sf_dance/sf_dance_filename std_msgs/String "Happy.xml" | rostopic pub -1 /sf_head/sf_headMovement_filename std_msgs/String "Happy.xml"

# sending command to test individual behaviour channel
rostopic pub -1 /sf_head/sf_headMovement_filename std_msgs/String "Happy.xml" 

# sending command to control the neck and head joints from terminal
rostopic pub -1 /neck_lower_controller/command_with_speed std_msgs/Float64MultiArray "layout:
  dim:
  - label: ''
    size: 0
    stride: 0
  data_offset: 0
data: [0.0, 100]"


TODO: 
1. Publish dynamixel joint states so it get displayed on rviz.
2. Connect to ShowMeTeachMe framework.
3. Install Arduino on robot.
4. Move everything into SF1-2.
5. Create standard_behaviour_parser for sf_tune, sf_dance, etc. based on headMovement_parser.hpp
   - the sf_tune.cpp need to be changed so it function similar to the control used in sf_head.cpp

